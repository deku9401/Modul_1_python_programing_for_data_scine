###############################################
# Python Alıştırmalar
###############################################

###############################################
# GÖREV 1: Veri yapılarının tipleriniz inceleyiniz.
###############################################

x = 8
type(x) #integer değer

y = 3.2
type(y)  #float değer

z = 8j + 18
type(z) #complex değer

a = "Hello World"
type(a) #string değer

b = True
type(b) #bool değer

c = 23 < 22
type(c) #true ,false ifadesi oldugu için buda bool değer

l = [1, 2, 3, 4,"String",3.2, False]

d = {"Name": "Jake",
     "Age": [27,56],
     "Adress": "Downtown"}    #key ve valulerden olusan sözlük

t = ("Machine Learning", "Data Science")

s = {"Python", "Machine Learning", "Data Science","Python"}

###############################################
# GÖREV 2: Verilen string ifadenin tüm harflerini büyük harfe çeviriniz. Virgül ve nokta yerine space koyunuz, kelime kelime ayırınız.
###############################################

text = "The goal is to turn data into information, and information into insight."


text.upper().replace(","," ").replace("."," ").split(" ")


##out ['THE',
 #'GOAL',
 #'IS',
 #'TO',
 #'TURN',
 #'DATA',
 #'INTO',
 #'INFORMATION',
 #'',
 #'AND',
 #'INFORMATION',
 #'INTO',
 #'INSIGHT',
 #'']


###############################################
# GÖREV 3: Verilen liste için aşağıdaki görevleri yapınız.
###############################################

lst = ["D","A","T","A","S","C","I","E","N","C","E"]

# Adım 1: Verilen listenin eleman sayısına bakın.

len(lst) #OUT 11

# Adım 2: Sıfırıncı ve onuncu index'teki elemanları çağırın.

lst[0] #out E
lst[10] #out E

# Adım 3: Verilen liste üzerinden ["D","A","T","A"] listesi oluşturun.
new_lst = lst[0:4]
new_lst

# Adım 4: Sekizinci index'teki elemanı silin.
lst.pop(8) #N silindi

# Adım 5: Yeni bir eleman ekleyin.

lst.append("hello")
lst #out Out[81]: ['D', 'A', 'T', 'A', 'S', 'C', 'I', 'E', 'N', 'C', 'E', 'hello']
# Adım 6: Sekizinci index'e  "N" elemanını tekrar ekleyin.

lst.insert(8,"N")
lst
###############################################
# GÖREV 4: Verilen sözlük yapısına aşağıdaki adımları uygulayınız.
###############################################

dict = {'Christian': ["America",18],
        'Daisy':["England",12],
        'Antonio':["Spain",22],
        'Dante':["Italy",25]}


# Adım 1: Key değerlerine erişiniz.

dict.keys()


# Adım 2: Value'lara erişiniz.

dict.values()

# Adım 3: Daisy key'ine ait 12 değerini 13 olarak güncelleyiniz.

dict['Daisy'][1]=13
dict['Daisy']
# Adım 4: Key değeri Ahmet value değeri [Turkey,24] olan yeni bir değer ekleyiniz.

dict["Ahmet"]=["Turkey",24]

dict.update({"Ahmet" : ["Turkey", 24]})

dict
# Adım 5: Antonio'yu dictionary'den siliniz.

dict.pop("Antonio")
dict


###############################################
# GÖREV 5: Arguman olarak bir liste alan, listenin içerisindeki tek ve çift sayıları ayrı listelere atıyan ve bu listeleri return eden fonskiyon yazınız.
###############################################

l = [2,13,18,93,22]

def oddeven(z):
    odd = []
    even = []

    for n in z:
        if n % 2 == 0:
            even.append(n)
        else:
            odd.append(n)

    return odd,even

oddeven(l)
odd
even


###############################################
# GÖREV 6: Aşağıda verilen listede mühendislik ve tıp fakülterinde dereceye giren öğrencilerin isimleri bulunmaktadır.
# Sırasıyla ilk üç öğrenci mühendislik fakültesinin başarı sırasını temsil ederken son üç öğrenci de tıp fakültesi öğrenci sırasına aittir.
# Enumarate kullanarak öğrenci derecelerini fakülte özelinde yazdırınız.
###############################################

ogrenciler = ["Ali","Veli","Ayşe","Talat","Zeynep","Ece"]


for index,ogrenci in enumerate(ogrenciler,1):
    if index < 4:
        print(f"Muhendislik Fakultesı", index,".", "ogrencı:", ogrenci)
    else:
        index -=3
        print(f"Tıp Fakultesı", index,".", "ogrencı:", ogrenci)

###############################################
# GÖREV 7: Aşağıda 3 adet liste verilmiştir. Listelerde sırası ile bir dersin kodu, kredisi ve kontenjan bilgileri yer almaktadır. Zip kullanarak ders bilgilerini bastırınız.
###############################################

ders_kodu = ["CMP1005","PSY1001","HUK1005","SEN2204"]
kredi = [3,4,2,4]
kontenjan = [30,75,150,25]

Lesson = list(zip(kredi,ders_kodu,kontenjan))

def lesson_informations(x):
    for b,n,m in x:
        print(f"Kredisi {b} olan {n} kodlu dersin kontejyanı {m} kişidir".format(b,n,m))

lesson_informations(Lesson)

###############################################
# GÖREV 8: Aşağıda 2 adet set verilmiştir.
# Sizden istenilen eğer 1. küme 2. kümeyi kapsiyor ise ortak elemanlarını eğer kapsamıyor ise 2. kümenin 1. kümeden farkını yazdıracak fonksiyonu tanımlamanız beklenmektedir.
###############################################

kume1 = set(["data", "python"])
kume2 = set(["data", "function", "qcut", "lambda", "python", "miuul"])

def set_control(x,y):
    if x.issuperset(y) == True:

        print(x.intersection(y))
    else:
        print(y.difference(x))


set_control(kume1,kume2)






